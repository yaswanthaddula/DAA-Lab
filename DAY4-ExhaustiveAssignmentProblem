import itertools
def total_cost(assignment, cost_matrix):
    return sum(cost_matrix[i][assignment[i]] for i in range(len(assignment)))
def assignment_problem(cost_matrix):
    num_workers = len(cost_matrix)
    workers = list(range(num_workers))
    min_cost = float('inf')
    best_assignment = None
    for perm in itertools.permutations(workers):
        current_cost = total_cost(perm, cost_matrix)
        if current_cost < min_cost:
            min_cost = current_cost
            best_assignment = perm
    return best_assignment, min_cost
cost_matrix_1 = [[3, 10, 7], [8, 5, 12], [4, 6, 9]]
cost_matrix_2 = [[15, 9, 4], [8, 7, 18], [6, 12, 11]]
optimal_assignment_1, total_cost_1 = assignment_problem(cost_matrix_1)
optimal_assignment_2, total_cost_2 = assignment_problem(cost_matrix_2)
print(f"Optimal Assignment 1: {list(zip(range(1, len(optimal_assignment_1) + 1), [x + 1 for x in optimal_assignment_1]))}, Total Cost: {total_cost_1}")
print(f"Optimal Assignment 2: {list(zip(range(1, len(optimal_assignment_2) + 1), [x + 1 for x in optimal_assignment_2]))}, Total Cost: {total_cost_2}")
