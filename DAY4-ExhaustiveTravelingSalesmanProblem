import itertools
import math
def distance(city1, city2):
    return math.sqrt((city1[0] - city2[0]) ** 2 + (city1[1] - city2[1]) ** 2)
def tsp(cities):
    start_city = cities[0]
    shortest_distance = float('inf')
    shortest_path = []
    for perm in itertools.permutations(cities[1:]):
        current_path = [start_city] + list(perm) + [start_city]
        current_distance = sum(distance(current_path[i], current_path[i + 1]) for i in range(len(current_path) - 1))
        if current_distance < shortest_distance:
            shortest_distance = current_distance
            shortest_path = current_path
    return shortest_distance, shortest_path
test_case = [(1, 2), (4, 5), (7, 1), (3, 6)]
result = tsp(test_case)
print(f"Shortest Distance: {result[0]}, Shortest Path: {result[1]}")
